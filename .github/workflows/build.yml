name: Build with Gradle

on:
  workflow_dispatch:
  push:
    tags:
      - '*'
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3.3.0
      
      - name: Set up JDK 8
        uses: actions/setup-java@v3.10.0
        with:
          java-version: 8
          distribution: temurin
          cache: gradle
          
      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1
            
      - name: Cache local Gradle repository
        uses: actions/cache@v3.2.6
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
            
      - name: Make gradle wrapper executable
        run: chmod +x ./gradlew
            
      - name: Package with Gradle
        run: ./gradlew build --no-daemon
          
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3.1.2
        with:
          name: MzLib Artifacts
          path: out/*.jar
  release:
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3.3.0

      - name: Download Artifacts
        uses: actions/download-artifact@v3.0.2
        with:
          name: MzLib Artifacts
          path: out

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.1.9
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: out/*.jar
          asset_name: ${{ github.event.repository.name }}-${{ github.sha }}.jar
          asset_content_type: application/java-archive